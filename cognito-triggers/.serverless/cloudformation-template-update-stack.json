{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "PostConfirmationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cognito-triggers-dev-postConfirmation"
      }
    },
    "PreTokenGenerationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cognito-triggers-dev-preTokenGeneration"
      }
    },
    "PreSignUpLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cognito-triggers-dev-preSignUp"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "cognito-triggers",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-triggers-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cognito-triggers-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:GetGroup",
                    "cognito-idp:CreateGroup",
                    "cognito-idp:AdminAddUserToGroup"
                  ],
                  "Resource": "arn:aws:cognito-idp:us-east-1:285012317380:userpool/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:PutItem"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:285012317380:table/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "cognito-triggers",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "PostConfirmationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "cognito-triggers/cognito-triggers/dev/1672270873924-2022-12-28T23:41:13.924Z/postConfirmation.zip"
        },
        "Handler": "functions/postConfirmation.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "cognito-triggers-dev-postConfirmation",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "region": "us-east-1",
            "graphqlEndpoint": "https://3nfot4lb5ffifmmci754xdoj6y.appsync-api.us-east-1.amazonaws.com/graphql"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PostConfirmationLogGroup"
      ]
    },
    "PreTokenGenerationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "cognito-triggers/cognito-triggers/dev/1672270873924-2022-12-28T23:41:13.924Z/preTokenGeneration.zip"
        },
        "Handler": "functions/preTokenGeneration.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "cognito-triggers-dev-preTokenGeneration",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "region": "us-east-1",
            "graphqlEndpoint": "https://3nfot4lb5ffifmmci754xdoj6y.appsync-api.us-east-1.amazonaws.com/graphql"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:285012317380:layer:appsync-layer-dev:1"
        ]
      },
      "DependsOn": [
        "PreTokenGenerationLogGroup"
      ]
    },
    "PreSignUpLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "cognito-triggers/cognito-triggers/dev/1672270873924-2022-12-28T23:41:13.924Z/preSignUp.zip"
        },
        "Handler": "functions/preSignUp.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "cognito-triggers-dev-preSignUp",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "stage": "dev",
            "region": "us-east-1",
            "graphqlEndpoint": "https://3nfot4lb5ffifmmci754xdoj6y.appsync-api.us-east-1.amazonaws.com/graphql"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PreSignUpLogGroup"
      ]
    },
    "PostConfirmationCustomCognitoUserPool1": {
      "Type": "Custom::CognitoUserPool",
      "Version": 1,
      "DependsOn": [
        "PostConfirmationLambdaFunction",
        "CustomDashresourceDashexistingDashcupLambdaFunction"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashcupLambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "cognito-triggers-dev-postConfirmation",
        "UserPoolName": "webc61eee58_userpool_c61eee58-dev",
        "UserPoolConfigs": [
          {
            "Trigger": "PostConfirmation"
          }
        ]
      }
    },
    "PreTokenGenerationCustomCognitoUserPool1": {
      "Type": "Custom::CognitoUserPool",
      "Version": 1,
      "DependsOn": [
        "PreTokenGenerationLambdaFunction",
        "CustomDashresourceDashexistingDashcupLambdaFunction",
        "PostConfirmationCustomCognitoUserPool1"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashcupLambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "cognito-triggers-dev-preTokenGeneration",
        "UserPoolName": "webc61eee58_userpool_c61eee58-dev",
        "UserPoolConfigs": [
          {
            "Trigger": "PreTokenGeneration"
          }
        ]
      }
    },
    "PreSignUpCustomCognitoUserPool1": {
      "Type": "Custom::CognitoUserPool",
      "Version": 1,
      "DependsOn": [
        "PreSignUpLambdaFunction",
        "CustomDashresourceDashexistingDashcupLambdaFunction",
        "PreTokenGenerationCustomCognitoUserPool1"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashcupLambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "cognito-triggers-dev-preSignUp",
        "UserPoolName": "webc61eee58_userpool_c61eee58-dev",
        "UserPoolConfigs": [
          {
            "Trigger": "PreSignUp"
          }
        ]
      }
    },
    "IamRoleCustomResourcesLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "cognito-triggers",
                  "custom-resources-lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": "*",
                  "Action": [
                    "cognito-idp:ListUserPools",
                    "cognito-idp:DescribeUserPool",
                    "cognito-idp:UpdateUserPool"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:lambda:*:*:function:cognito-triggers-dev-postConfirmation"
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:lambda:*:*:function:cognito-triggers-dev-preTokenGeneration"
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:lambda:*:*:function:cognito-triggers-dev-preSignUp"
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Sub": "arn:${AWS::Partition}:iam::*:role/*"
                  },
                  "Action": [
                    "iam:PassRole"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomDashresourceDashexistingDashcupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "cognito-triggers/cognito-triggers/dev/1672270873924-2022-12-28T23:41:13.924Z/custom-resources.zip"
        },
        "FunctionName": "cognito-triggers-dev-custom-resource-existing-cup",
        "Handler": "cognitoUserPool/handler.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs12.x",
        "Timeout": 180,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleCustomResourcesLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IamRoleCustomResourcesLambdaExecution"
      ]
    },
    "CognitoPostConfirmationLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "PostConfirmationLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": "arn:aws:cognito-idp:us-east-1:285012317380:userpool/us-east-1_U60pC7lYD"
      }
    },
    "CognitoPreTokenGenerationLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "PreTokenGenerationLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": "arn:aws:cognito-idp:us-east-1:285012317380:userpool/us-east-1_U60pC7lYD"
      }
    },
    "CognitoPreSignUpLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "PreSignUpLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": "arn:aws:cognito-idp:us-east-1:285012317380:userpool/us-east-1_U60pC7lYD"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-cognito-triggers-dev-ServerlessDeploymentBucketName"
      }
    }
  }
}