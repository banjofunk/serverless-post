{"version":3,"file":"functions/preTokenGeneration.js","mappings":";;;;;;;AACA,eAAe,kCAAkC,4DAA4D,mCAAmC,yBAAyB,wCAAwC,0BAA0B,+BAA+B,SAAS,6BAA6B,2BAA2B,0CAA0C,iBAAiB,kCAAkC,qCAAqC,uBAAuB,mCAAmC,eAAe,0BAA0B,8BAA8B,UAAU,0BAA0B,gCAAgC,kCAAkC,qCAAqC,uBAAuB,2BAA2B,gCAAgC,EAAE,uBAAuB,kCAAkC,gCAAgC,EAAE,uBAAuB,kCAAkC,gCAAgC,EAAE,uBAAuB,iCAAiC,gCAAgC,EAAE,uBAAuB,wCAAwC,gCAAgC,EAAE,uBAAuB,8BAA8B,gCAAgC,GAAG,GAAG,SAAS;AAClwC,sBAAsB,uDAAuD,+BAA+B,yFAAyF,GAAG,+CAA+C;AACvP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAQ,yBAA4B;AACpC;;;;;;;;;ACxHA,eAAe,kCAAkC,yDAAyD,oCAAoC,yBAAyB,wCAAwC,0BAA0B,+BAA+B,SAAS,6BAA6B,2BAA2B,iCAAiC,iBAAiB,kCAAkC,qCAAqC,uBAAuB,wCAAwC,eAAe,0BAA0B,8BAA8B,UAAU,0BAA0B,gCAAgC,kCAAkC,qCAAqC,uBAAuB,8BAA8B,gDAAgD,qCAAqC,uBAAuB,2BAA2B,gCAAgC,EAAE,uBAAuB,kCAAkC,gCAAgC,EAAE,uBAAuB,8BAA8B,gCAAgC,EAAE,uBAAuB,kCAAkC,gCAAgC,EAAE,uBAAuB,iCAAiC,gCAAgC,EAAE,uBAAuB,wCAAwC,gCAAgC,GAAG,GAAG,GAAG,SAAS;AACz4C,sBAAsB,4CAA4C,oCAAoC,aAAa,uGAAuG,KAAK,GAAG,+CAA+C;AACjR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,QAAQ,0BAA6B;AACrC;;;;;;;;;ACzHA;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7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","sources":["webpack://cognito-triggers/./graphql/createUser.graphql","webpack://cognito-triggers/./graphql/getUserAuth.graphql","webpack://cognito-triggers/external commonjs \"es6-promise\"","webpack://cognito-triggers/external commonjs \"isomorphic-fetch\"","webpack://cognito-triggers/webpack/bootstrap","webpack://cognito-triggers/webpack/runtime/compat get default export","webpack://cognito-triggers/webpack/runtime/define property getters","webpack://cognito-triggers/webpack/runtime/hasOwnProperty shorthand","webpack://cognito-triggers/webpack/runtime/make namespace object","webpack://cognito-triggers/external commonjs \"aws-sdk\"","webpack://cognito-triggers/external commonjs \"ws\"","webpack://cognito-triggers/external commonjs \"aws-appsync\"","webpack://cognito-triggers/../service-helpers/appsyncClient.js","webpack://cognito-triggers/./functions/preTokenGeneration.js"],"sourcesContent":["\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateUser\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"CreateUserInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createUser\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"profileImageUrl\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":162}};\n    doc.loc.source = {\"body\":\"mutation CreateUser($input: CreateUserInput!) {\\n  createUser(input: $input) {\\n    id\\n    createdAt\\n    firstName\\n    lastName\\n    profileImageUrl\\n    email\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"CreateUser\"] = oneQuery(doc, \"CreateUser\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getUserAuth\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"listUserByEmail\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"items\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"profileImageUrl\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":186}};\n    doc.loc.source = {\"body\":\"query getUserAuth($email: String!) {\\n  listUserByEmail(email: $email) {\\n    items {\\n      id\\n      createdAt\\n      email\\n      firstName\\n      lastName\\n      profileImageUrl\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"getUserAuth\"] = oneQuery(doc, \"getUserAuth\");\n        \n","module.exports = require(\"es6-promise\");","module.exports = require(\"isomorphic-fetch\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"aws-sdk\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"ws\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"aws-appsync\");","import AWS from 'aws-sdk';\nimport ws from 'ws';\nimport AWSAppSyncClient from 'aws-appsync';\n\n// POLYFILLS\nglobal.WebSocket = ws;\nglobal.window = global.window || {\n  setTimeout,\n  clearTimeout,\n  WebSocket: global.WebSocket,\n  ArrayBuffer: global.ArrayBuffer,\n  addEventListener() {},\n  navigator: { onLine: true },\n};\nglobal.localStorage = {\n  store: {},\n  getItem(key) {\n    return this.store[key];\n  },\n  setItem(key, value) {\n    this.store[key] = value;\n  },\n  removeItem(key) {\n    delete this.store[key];\n  },\n};\n\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\n\nconst appsyncClient = new AWSAppSyncClient({\n  url: process.env.graphqlEndpoint,\n  region: 'us-east-1',\n  auth: {\n    type: 'AWS_IAM',\n    credentials: AWS.config.credentials,\n  },\n  disableOffline: true,\n});\n\nconst getClient = (url = process.env.graphqlEndpoint) =>\n  new AWSAppSyncClient({\n    url,\n    region: 'us-east-1',\n    auth: {\n      type: 'AWS_IAM',\n      credentials: AWS.config.credentials,\n    },\n    disableOffline: true,\n  });\n\nexport { appsyncClient, getClient };\n","import { appsyncClient } from 'service-helpers/appsyncClient';\nimport getUserAuth from '../graphql/getUserAuth.graphql';\nimport createUser from '../graphql/createUser.graphql';\n\nexports.handler = async (event) => {\n  console.log(JSON.stringify(event));\n  const { userAttributes: { email, identities } = {} } = event.request || {};\n  const { userName } = event || {};\n  const providers = identities ? JSON.parse(identities) : [];\n  const provider =\n    providers.find((prov) => {\n      const key = (prov.userId || '').toLocaleLowerCase();\n\n      return userName.includes(key);\n    }) || {};\n  const fullProviderName = provider.providerName || 'Cognito';\n  const { [fullProviderName]: providerName = fullProviderName } = {\n    LoginWithAmazon: 'Amazon',\n  };\n  const client = await appsyncClient.hydrated();\n\n  // create a User if email is not already in use\n  const skipOrCreateUser = (usr) => {\n    if (usr) return usr;\n\n    return client\n      .mutate({\n        mutation: createUser,\n        fetchPolicy: 'no-cache',\n        variables: { input: { email } },\n      })\n      .then(({ data: { createUser: resp } }) => resp || false);\n  };\n\n  // find or create user and update providerId if needed\n  const user = await client\n    .query({ query: getUserAuth, fetchPolicy: 'network-only', variables: { email } })\n    .then(({ data: { listUserByEmail: { items: [resp] = [] } } = {} }) => resp || false)\n    .then(skipOrCreateUser);\n\n  console.log('user', user);\n\n  const claimsToAddOrOverride = { providerName, userId: user.id };\n  const userAuthGroup = `${user.id}:user`;\n  const groupsToOverride = [userAuthGroup];\n\n  event.response = {\n    claimsOverrideDetails: {\n      claimsToAddOrOverride,\n      groupOverrideDetails: {\n        groupsToOverride,\n      },\n    },\n  };\n\n  return event;\n};\n"],"names":["AWS","ws","AWSAppSyncClient","global","WebSocket","window","setTimeout","clearTimeout","ArrayBuffer","addEventListener","navigator","onLine","localStorage","store","getItem","key","setItem","value","removeItem","require","polyfill","appsyncClient","url","process","env","graphqlEndpoint","region","auth","type","credentials","config","disableOffline","getClient","getUserAuth","createUser","exports","handler","event","console","log","JSON","stringify","userAttributes","email","identities","request","userName","providers","parse","provider","find","prov","userId","toLocaleLowerCase","includes","fullProviderName","providerName","LoginWithAmazon","client","hydrated","skipOrCreateUser","usr","mutate","mutation","fetchPolicy","variables","input","then","data","resp","user","query","listUserByEmail","items","claimsToAddOrOverride","id","userAuthGroup","groupsToOverride","response","claimsOverrideDetails","groupOverrideDetails"],"sourceRoot":""}