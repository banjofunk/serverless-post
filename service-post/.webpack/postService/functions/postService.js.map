{"version":3,"file":"functions/postService.js","mappings":"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","sources":["webpack://service-post/./graphql/updatePost.graphql","webpack://service-post/../service-helpers/appsyncClient.js","webpack://service-post/./functions/invokeLambda.js","webpack://service-post/external commonjs \"aws-appsync\"","webpack://service-post/external commonjs \"aws-sdk\"","webpack://service-post/external commonjs \"es6-promise\"","webpack://service-post/external commonjs \"isomorphic-fetch\"","webpack://service-post/external commonjs \"ws\"","webpack://service-post/webpack/bootstrap","webpack://service-post/webpack/runtime/compat get default export","webpack://service-post/webpack/runtime/define property getters","webpack://service-post/webpack/runtime/hasOwnProperty shorthand","webpack://service-post/webpack/runtime/make namespace object","webpack://service-post/./functions/postService.js"],"sourcesContent":["\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdatePost\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"UpdatePostInput\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updatePost\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"input\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"userPostsId\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"authGroups\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"updatedAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lambdaInvokedAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"body\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":179}};\n    doc.loc.source = {\"body\":\"mutation UpdatePost($input: UpdatePostInput!) {\\n  updatePost(input: $input) {\\n    id\\n    userPostsId\\n    authGroups\\n    createdAt\\n    updatedAt\\n    lambdaInvokedAt\\n    body\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n    \n    module.exports = doc;\n    \n        module.exports[\"UpdatePost\"] = oneQuery(doc, \"UpdatePost\");\n        \n","import AWS from 'aws-sdk';\nimport ws from 'ws';\nimport AWSAppSyncClient from 'aws-appsync';\n\n// POLYFILLS\nglobal.WebSocket = ws;\nglobal.window = global.window || {\n  setTimeout,\n  clearTimeout,\n  WebSocket: global.WebSocket,\n  ArrayBuffer: global.ArrayBuffer,\n  addEventListener() {},\n  navigator: { onLine: true },\n};\nglobal.localStorage = {\n  store: {},\n  getItem(key) {\n    return this.store[key];\n  },\n  setItem(key, value) {\n    this.store[key] = value;\n  },\n  removeItem(key) {\n    delete this.store[key];\n  },\n};\n\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\n\nconst appsyncClient = new AWSAppSyncClient({\n  url: process.env.graphqlEndpoint,\n  region: 'us-east-1',\n  auth: {\n    type: 'AWS_IAM',\n    credentials: AWS.config.credentials,\n  },\n  disableOffline: true,\n});\n\nconst getClient = (url = process.env.graphqlEndpoint) =>\n  new AWSAppSyncClient({\n    url,\n    region: 'us-east-1',\n    auth: {\n      type: 'AWS_IAM',\n      credentials: AWS.config.credentials,\n    },\n    disableOffline: true,\n  });\n\nexport { appsyncClient, getClient };\n","import { appsyncClient } from 'service-helpers/appsyncClient';\nimport updatePost from '../graphql/updatePost.graphql';\n\nexport const invokeLambda = async (event) => {\n  console.log(JSON.stringify(event));\n  const { postId } = event.arguments;\n  const client = await appsyncClient.hydrated();\n  const input = { id: postId, lambdaInvokedAt: new Date().toISOString() };\n\n  console.log('input', input);\n\n  return client\n    .mutate({ mutation: updatePost, fetchPolicy: 'no-cache', variables: { input } })\n    .then(({ data: { updatePost: resp } }) => resp);\n};\n","module.exports = require(\"aws-appsync\");","module.exports = require(\"aws-sdk\");","module.exports = require(\"es6-promise\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"ws\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { invokeLambda } from './invokeLambda';\n\nexport const handler = (event) => {\n  console.log(event);\n  const defaultAction = () => console.log(`fieldName ${event.fieldName} has no action`);\n\n  const { [event.fieldName]: action = defaultAction } = {\n    invokeLambda,\n  };\n\n  return action(event);\n};\n"],"names":["AWS","ws","AWSAppSyncClient","global","WebSocket","window","setTimeout","clearTimeout","ArrayBuffer","addEventListener","navigator","onLine","localStorage","store","getItem","key","setItem","value","removeItem","require","polyfill","appsyncClient","url","process","env","graphqlEndpoint","region","auth","type","credentials","config","disableOffline","getClient","updatePost","invokeLambda","event","console","log","JSON","stringify","postId","arguments","client","hydrated","input","id","lambdaInvokedAt","Date","toISOString","mutate","mutation","fetchPolicy","variables","then","data","resp","handler","defaultAction","fieldName","action"],"sourceRoot":""}