type Mutation {
  invokeLambda(postId: ID): Post
    @function(name: "service-post-${env}-postService")
    @aws_iam
    @aws_cognito_user_pools
}

type User
  @model(subscriptions: { level: off })
  @auth(
    rules: [
      { allow: private, provider: iam }
      { allow: groups, groups: ["Admin"] }
      { allow: groups, groupsField: "authGroups" }
    ]
  ) {
  id: ID!
  authGroups: [String]
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  firstName: String
  lastName: String
  profileImageUrl: String
  email: String! @index(name: "byEmail", queryField: "listUserByEmail")
  posts: [Post] @hasMany
}

type Post
  @model
  @auth(
    rules: [
      { allow: private, provider: iam }
      { allow: private, provider: userPools, operations: [read] }
      { allow: groups, groups: ["Admin"] }
      { allow: groups, groupsField: "authGroups" }
    ]
  ) {
  id: ID!
  userPostsId: ID!
  authGroups: [String]
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
  lambdaInvokedAt: AWSDateTime
  body: String!
  user: User @belongsTo
}
